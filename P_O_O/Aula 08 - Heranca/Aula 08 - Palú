from random import randrange

class Dispositivo():
    def __init__(self, nome):
        self.nome = nome
    def retornaID(self):
        return self.nome
    
class Sensor(Dispositivo):
    def __init__(self, nome, dado = None):
        super().__init__(nome)
        self.dado = dado
    def enviaDado(self):
        self.dado = randrange(1023)
        return self.dado
    
class Microcontrolador(Dispositivo):
    def __init__(self, nome):
        super().__init__(nome)
        self.dadosSensores = dict()
        self.dadosAtuadores = dict()
    def recebeDado(self, nomeSensor, valorSensor):
        self.dadosSensores[nomeSensor] = valorSensor
    def enviaDado(self, nomeAtuador, estado):
        self.dadosAtuadores[nomeAtuador] = estado
        return self.dadosAtuadores[nomeAtuador]
    def exibeInfo(self, tipo, nomeDispositivo):
        if tipo == "sensor":
            print("{0}: {1}".format(nomeDispositivo, self.dadosSensores[nomeDispositivo]))
        if tipo == "atuador":
            print("{0}: {1}".format(nomeDispositivo, self.dadosAtuadores[nomeDispositivo]))
         
class Atuador(Dispositivo):
    def __init__(self, nome, estado = None):
        super().__init__(nome)
        self.estado = estado
    def exibeEstado(self):
        if self.estado == 1:
            print("O nome do atuador é: {0} e seu estado é ligado".format(nomeDispositivo))
        elif self.estado == 0:
            print("O nome do atuador é: {0} e seu estado é ligado".format(nomeDispositivo))

class LED(Atuador):
    def liga(self):
        estado = 1
        return estado
    def desliga(self):#***
        estado = 0
        return estado

class Motor(Atuador):
    def __init__(self, nome, direcao = None, velocidade = None):
        super().__init__(nome)
        self.direcao = direcao
        self.velocidade = velocidade
    def atribuiDirecao(self):#***
        if self.direcao() != (0 or 1):
            print("Essa direção não existe!")
        # Sentido Horário = 1
        # Sentido Anti-Horário = 0
        self.direcao = randrange(2)
        return self.direcao
    def atribuiVelocidade(self):#***
        self.velocidade = randrange(256)
        if self.velocidade() > 0:
            estado = 1
        else:
            estado = 0
        return estado

sensor1 = Sensor("Ultrassom")
arduino = Microcontrolador("Arduino")
arduino.recebeDado(sensor1.retornaID(), sensor1.enviaDado())
arduino.exibeInfo("sensor", sensor1.retornaID())
sensor2 = Sensor("Sensor de Linha")
arduino.recebeDado(sensor2.retornaID(), sensor2.enviaDado())
arduino.exibeInfo("sensor", sensor2.retornaID())
